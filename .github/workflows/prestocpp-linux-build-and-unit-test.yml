name: prestocpp-linux-build-and-unit-test

on:
  workflow_dispatch:
  schedule:
    - cron: '30 0 * * *' # Runs at 00:30 UTC daily on master(default) branch
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      codechange: ${{ steps.filter.outputs.codechange }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Run changes check for PRs
      if: github.event_name == 'schedule'
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          codechange:
            - '!presto-docs/**'

  prestocpp-linux-build-for-test:
    runs-on: ubuntu-22.04
    needs: changes
    container:
      image: prestodb/presto-native-dependency:0.293-20250522140509-484b00e
    concurrency:
      group: ${{ github.workflow }}-prestocpp-linux-build-test-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    env:
      CCACHE_DIR: "${{ github.workspace }}/ccache"
    steps:
      - uses: actions/checkout@v4
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'

      - name: Fix git permissions
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        # Usually actions/checkout does this but as we run in a container
        # it doesn't work
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Update velox
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: |
          cd presto-native-execution
          make velox-submodule

      - name: Install Github CLI for using apache/infrastructure-actions/stash
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: |
          curl -L https://github.com/cli/cli/releases/download/v2.63.2/gh_2.63.2_linux_amd64.rpm > gh_2.63.2_linux_amd64.rpm
          rpm -iv gh_2.63.2_linux_amd64.rpm

      - uses: apache/infrastructure-actions/stash/restore@4ab8682fbd4623d2b4fc1c98db38aba5091924c3
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-prestocpp-linux-build-for-test

      - name: Zero ccache statistics
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: ccache -sz

      - name: Build engine
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: |
          source /opt/rh/gcc-toolset-12/enable
          cd presto-native-execution
          cmake \
            -B _build/release \
            -GNinja \
            -DTREAT_WARNINGS_AS_ERRORS=1 \
            -DENABLE_ALL_WARNINGS=1 \
            -DCMAKE_BUILD_TYPE=Release \
            -DPRESTO_ENABLE_PARQUET=ON \
            -DPRESTO_ENABLE_REMOTE_FUNCTIONS=ON \
            -DPRESTO_ENABLE_JWT=ON \
            -DPRESTO_STATS_REPORTER_TYPE=PROMETHEUS \
            -DPRESTO_MEMORY_CHECKER_TYPE=LINUX_MEMORY_CHECKER \
            -DCMAKE_PREFIX_PATH=/usr/local \
            -DThrift_ROOT=/usr/local \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DMAX_LINK_JOBS=4
          ninja -C _build/release -j 4

      - name: Ccache after
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: ccache -s

      - uses: apache/infrastructure-actions/stash/save@4ab8682fbd4623d2b4fc1c98db38aba5091924c3
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-prestocpp-linux-build-for-test

      - name: Run Unit Tests
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        run: |
          # Ensure transitive dependency libboost-iostreams is found.
          ldconfig /usr/local/lib
          cd presto-native-execution/_build/release
          ctest -j 4 -VV --output-on-failure --exclude-regex velox.*

      - name: Upload artifacts
        if: |
          github.event_name != 'schedule' || needs.changes.outputs.codechange == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: presto-native-build
          path: |
            presto-native-execution/_build/release/presto_cpp/main/presto_server
            presto-native-execution/_build/release/velox/velox/functions/remote/server/velox_functions_remote_server_main